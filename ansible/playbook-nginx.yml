---

- name: 'Gather facts'
  hosts: 'all'
  gather_facts: true

- name: 'Install Nginx'
  hosts: 'k3s1'
  gather_facts: false
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Install Nginx via helm chart'
      # running this from vagrant fails, if we target localhost directly
      delegate_to: 'localhost'
      kubernetes.core.helm:
        release_name: 'nginx'
        chart_ref: 'oci://registry-1.docker.io/bitnamicharts/nginx'
        release_namespace: 'default'
        values:
          service:
            type: ClusterIP
          ingress:
            enabled: false

    - name: 'Create a Listener'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: getambassador.io/v3alpha1
          kind: Listener
          metadata:
            name: emissary-ingress-listener-8080
            namespace: emissary
          spec:
            port: 8080
            protocol: HTTP
            securityModel: INSECURE
            hostBinding:
              namespace:
                from: ALL

    - name: 'Create the Host'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: getambassador.io/v3alpha1
          kind: Host
          metadata:
            name: nginx
            namespace: emissary
          spec:
            hostname: "nginx.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
            # we are only using http, hence we disable the redirect to HTTPS
            requestPolicy:
              insecure:
                action: Route

    - name: 'Create a Mapping'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: getambassador.io/v3alpha1
          kind: Mapping
          metadata:
            name: nginx
            namespace: emissary
          spec:
            hostname: "nginx.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
            prefix: /
            service: nginx.default

    #
    # Final checks
    #

    - name: 'Wait for URL to be available'
      ansible.builtin.uri:
        url: "http://nginx.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 200"
      retries: 31
      delay: 10
      delegate_to: 'localhost'

    - name: 'Output URL'
      ansible.builtin.debug:
        msg: "You can access the Nginx deployment here: http://nginx.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
      delegate_to: 'localhost'
